// Generated by CoffeeScript 1.3.3
(function() {
  var config, du, lib, mdb, util, _x;

  util = require('util');

  du = require('date-utils');

  lib = require('./lib');

  config = require('config');

  mdb = require('./mdb');

  _x = exports || this;

  _x.paylist = function(req, res) {
    return mdb.Payments.find({}).desc('ts').limit(50).exec(function(err, pay_list) {
      return res.render("manager/list", {
        pay_list: pay_list,
        bill_href: function(p) {
          var _ref;
          if ((_ref = p.state) === 'new' || _ref === 'sent') {
            return config.server.baseurl + "bill/" + p.merc_id + "-" + p.srand;
          }
        }
      });
    });
  };

  _x.newpay = function(req, res) {
    return res.render("manager/newpay");
  };

  _x.newpay_post = function(req, res) {
    var amount, b;
    b = req.body;
    amount = parseInt(b.amount);
    if (amount > 0) {
      return mdb.inc_counter("merc_id", 1, function(err, seq) {
        var merc_id, pm;
        merc_id = new Date().toFormat("YYMMDD") + lib.left_pad(seq, 6);
        console.log('merc_id:', merc_id);
        pm = new mdb.Payments({
          merc_id: merc_id,
          srand: lib.random_digits(),
          name: b.name,
          email: b.email,
          descr: b.descr,
          amount: amount
        });
        pm.save(function(err) {
          if (err != null) {
            return console.log('save err:', err);
          }
        });
        return res.send({
          ok: 1
        });
      });
    } else {
      return res.send({
        ok: 1
      });
    }
  };

  _x.send_link = function(req, res) {
    return res.send({
      ok: 1
    });
  };

}).call(this);
