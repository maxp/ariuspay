// Generated by CoffeeScript 1.3.3
(function() {
  var config, crypto, mdb, request, url, _;

  _ = exports || this;

  crypto = require('crypto');

  config = require('config');

  request = require('request');

  url = require('url');

  mdb = require('./mdb');

  _.bill = function(req, res) {
    var order_id, srand, _ref;
    _ref = req.params.order_srand.split('-', 2), order_id = _ref[0], srand = _ref[1];
    return mdb.Orders.findOne({
      order_id: order_id,
      srand: srand
    }, function(err, ord) {
      if (ord) {
        return res.render('client/bill', {
          order: ord
        });
      } else {
        return res.send("not found");
      }
    });
  };

  _.bill_redir = function(req, res) {
    var order_id, srand, _ref;
    console.log('bill_redir');
    _ref = req.params.order_srand.split('-', 2), order_id = _ref[0], srand = _ref[1];
    return mdb.Orders.findOne({
      order_id: order_id,
      srand: srand
    }, function(err, ord) {
      var ar, arius_url, data, ep, sha;
      if (ord) {
        ep = config.arius.endpoint;
        arius_url = config.arius.api_url + "sale-form/" + ep;
        sha = crypto.createHash('sha1');
        sha.update(ep + ord.order_id + (ord.amount * 100) + ord.email);
        sha.update(config.arius.merc_key);
        data = {
          client_orderid: ord.order_id,
          email: ord.email,
          amount: "" + ord.amount + ".00",
          currency: "RUR",
          order_desc: ord.descr,
          control: sha.digest('hex'),
          redirect_url: 'http://ya.ru',
          ipaddress: req.connection.remoteAddress,
          country: "RU",
          city: "Irkutsk",
          zip_code: "664000",
          address1: "Rio de Bodaibo"
        };
        console.log('data:', data);
        return ar = request.post({
          url: arius_url,
          form: data
        }, function(err, rsp, body) {
          console.log('body:', body);
          return res.send({
            err: 999
          });
        });
      } else {
        return res.send({
          err: 2
        });
      }
    });
  };

}).call(this);
