// Generated by CoffeeScript 1.3.3
(function() {
  var config, crypto, https, mdb, url, _;

  _ = exports || this;

  crypto = require('crypto');

  config = require('config');

  https = require('https');

  url = require('url');

  mdb = require('./mdb');

  _.bill = function(req, res) {
    var order_id, srand, _ref;
    _ref = req.params.order_srand.split('-', 2), order_id = _ref[0], srand = _ref[1];
    return mdb.Orders.findOne({
      order_id: order_id,
      srand: srand
    }, function(err, ord) {
      if (ord) {
        return res.render('client/bill', {
          order: ord
        });
      } else {
        return res.send("not found");
      }
    });
  };

  _.bill_redir = function(req, res) {
    var order_id, srand, _ref;
    console.log('bill_redir');
    _ref = req.params.order_srand.split('-', 2), order_id = _ref[0], srand = _ref[1];
    return mdb.Orders.findOne({
      order_id: order_id,
      srand: srand
    }, function(err, ord) {
      var ar, arius_url, data, ep, r_opt, sha;
      if (ord) {
        ep = config.arius.endpoint;
        arius_url = config.arius.api_url + "sale-form/" + ep;
        r_opt = url.parse(arius_url);
        r_opt.method = 'POST';
        sha = crypto.createHash('sha1');
        sha.update(ep + ord.order_id + (ord.amount * 100) + ord.email);
        sha.update(config.arius.merc_key);
        data = {
          order: ord,
          control: sha.digest('hex'),
          redirect_url: 'http://ya.ru',
          ip_addr: req.connection.remoteAddress
        };
        console.log('bill_data:', data);
        return ar = https.request(r_opt, function(h) {
          var buffer;
          console.log('arius: ', h);
          console.log("statusCode: ", h.statusCode);
          console.log("headers: ", h.headers);
          buffer = "";
          h.on('data', function(d) {
            console.log('on_data');
            return buffer += d;
          });
          h.on('end', function() {
            console.log('arius end: ', buffer);
            return res.send({
              err: 999
            });
          });
          return h.on('error', function(e) {
            console.log('arius_err:', e);
            return res.send({
              err: 4
            });
          });
        }).on('error', function(e) {
          console.log('ar_error:', e);
          return res.send({
            err: 3
          });
        }).end();
      } else {
        return res.send({
          err: 2
        });
      }
    });
  };

}).call(this);
