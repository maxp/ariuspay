// Generated by CoffeeScript 1.3.3
(function() {
  var Counter, Counters, Order, Schema, config, mongoose, oid, _;

  _ = exports || this;

  mongoose = require('mongoose');

  Schema = mongoose.Schema;

  oid = Schema.ObjectId;

  config = require('config');

  mongoose.connect(config.datasource.url);

  Counter = new Schema({
    _id: String,
    val: Number
  });

  Counter.statics.findAndModify = function(query, sort, doc, options, callback) {
    return this.collection.findAndModify(query, sort, doc, options, callback);
  };

  Counters = mongoose.model('counter', Counter);

  _.Counters = Counters;

  _.inc_counter = function(name, n, cb) {
    return Counters.findAndModify({
      _id: name
    }, [], {
      $inc: {
        val: n
      }
    }, {
      'new': true,
      upsert: true
    }, function(err, res) {
      if (err) {
        return cb(err);
      } else {
        return cb(null, res.val);
      }
    });
  };

  Order = new Schema({
    _id: oid,
    state: {
      type: String,
      "default": 'new',
      "enum": ['new', 'sent', 'paid', 'canc', 'del']
    },
    ts: {
      type: Date,
      "default": Date.now
    },
    name: String,
    email: String,
    descr: String,
    amount: Number,
    order_id: String,
    srand: String,
    arius_id: String
  });

  Order.index({
    order_id: 1
  });

  _.Orders = mongoose.model('order', Order);

}).call(this);
