// Generated by CoffeeScript 1.3.3
(function() {
  var RUN_CONFS, VERSION, app, base_uri, client, config, express, manager, mdb, node_env,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  VERSION = "ariuspay 0.0.2";

  console.log(("" + VERSION + " starting at: ") + new Date);

  RUN_CONFS = ["development", "production"];

  if (!process.env.NODE_ENV) {
    process.env.NODE_ENV = 'development';
  }

  node_env = process.env.NODE_ENV;

  if (__indexOf.call(RUN_CONFS, node_env) < 0) {
    console.error("NODE_ENV[" + node_env + "] not in ", RUN_CONFS);
    process.exit(1);
  }

  config = require('config');

  express = require('express');

  mdb = require('./mdb');

  app = express.createServer();

  app.configure(function() {
    app.set("views", __dirname + "/views");
    app.set("view engine", 'jade');
    app.set("view options", {
      layout: false,
      pretty: false,
      cache: true
    });
    app.use(express.favicon());
    app.use(express.logger("dev"));
    app.use(express.bodyParser());
    app.use(app.router);
    return app.use('/inc', express["static"](__dirname + "/inc"));
  });

  app.configure("development", function() {
    app.set("view options", {
      layout: false,
      pretty: true,
      cache: false
    });
    return app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  });

  app.configure("production", function() {
    return app.use(express.errorHandler());
  });

  manager = require('./manager');

  client = require('./client');

  base_uri = config.server.base_uri;

  app.get("/", function(req, res) {
    return res.redirect(base_uri + "manager/");
  });

  app.get(base_uri + "manager/", manager.paylist);

  app.get(base_uri + "manager/new_order", manager.new_order);

  app.post(base_uri + "manager/new_order", manager.new_order_post);

  app.get(base_uri + "bill/:order_srand", client.bill);

  app.post(base_uri + "bill/:order_srand", client.bill_redir);

  app.listen(config.server.port);

}).call(this);
